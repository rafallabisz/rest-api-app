{"version":3,"sources":["images/image.jpg","components/AddUserModal.js","components/EditUserModal.js","components/UsersTable.js","components/Header.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AddUserModal","props","_props$state","state","addUserModal","value_firstName","value_lastName","react_default","a","createElement","Modal","isOpen","toggle","handleAddUserModal","ModalHeader","ModalBody","FormGroup","Label","for","Input","id","name","maxLength","value","onChange","handleInput","ModalFooter","Button","color","onClick","addUser","EditUserModal","editUserModal","value_id","handleEditUserModal","type","editUser","UsersTable","users","map","user","key","src","avatar","alt","className","first_name","toLowerCase","last_name","size","deleteUser","Table","Header","Row","Col","Footer","CardFooter","API","App","err","isLoading","fetchUsers","_callee","path","option","regenerator_default","wrap","_context","prev","next","fetch","then","response","status","alert","concat","ok","json","console","log","method","_this$state","_this","setState","data","newUser","Number","Avatar","Object","toConsumableArray","index","findIndex","splice","catch","error","stop","_this$state2","request","headers","Content-type","body","JSON","stringify","_this$state3","prevState","e","defineProperty","target","this","components_Header","components_AddUserModal","components_UsersTable","components_EditUserModal","components_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8e230de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image.b4f9a703.jpg\";","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, FormGroup, Label } from 'reactstrap';\r\n\r\nconst AddUserModal = (props) => {\r\n  const { addUserModal, value_firstName, value_lastName } = props.state;\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={addUserModal}\r\n      toggle={props.handleAddUserModal}>\r\n      <ModalHeader\r\n        toggle={props.handleAddUserModal}>\r\n        Add a new user</ModalHeader>\r\n      <ModalBody>\r\n        <FormGroup>\r\n          <Label for=\"firstName\">First Name</Label>\r\n          <Input\r\n            id=\"firstName\"\r\n            name=\"value_firstName\"\r\n            maxLength=\"20\"\r\n            value={value_firstName}\r\n            onChange={props.handleInput} />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"lastName\">Last Name</Label>\r\n          <Input\r\n            id=\"lastName\"\r\n            name=\"value_lastName\"\r\n            maxLength=\"20\"\r\n            value={value_lastName}\r\n            onChange={props.handleInput} />\r\n        </FormGroup>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button\r\n          color=\"primary\"\r\n          onClick={props.addUser}>\r\n          Add User</Button>{' '}\r\n        <Button\r\n          color=\"secondary\"\r\n          onClick={props.handleAddUserModal}>\r\n          Cancel</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddUserModal;","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, FormGroup, Label } from 'reactstrap';\r\n\r\nconst EditUserModal = (props) => {\r\n  const { editUserModal, value_firstName, value_lastName, value_id } = props.state;\r\n  return (\r\n    <Modal\r\n      isOpen={editUserModal}\r\n      toggle={props.handleEditUserModal}>\r\n      <ModalHeader\r\n        toggle={props.handleEditUserModal}>\r\n        User edition</ModalHeader>\r\n      <ModalBody>\r\n        <FormGroup>\r\n          <Label for=\"firstName\">First Name</Label>\r\n          <Input\r\n            id=\"firstName\"\r\n            name=\"value_firstName\"\r\n            maxLength=\"20\"\r\n            value={value_firstName}\r\n            onChange={props.handleInput} />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"lastName\">Last Name</Label>\r\n          <Input\r\n            id=\"lastName\"\r\n            name=\"value_lastName\"\r\n            maxLength=\"20\"\r\n            value={value_lastName}\r\n            onChange={props.handleInput} />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"id\">ID</Label>\r\n          <Input\r\n            id=\"id\"\r\n            name=\"value_id\"\r\n            type=\"number\"\r\n            maxLength=\"20\"\r\n            value={value_id}\r\n            onChange={props.handleInput} />\r\n        </FormGroup>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button\r\n          color=\"primary\"\r\n          onClick={props.editUser}>\r\n          Edit User</Button>{' '}\r\n        <Button\r\n          color=\"secondary\"\r\n          onClick={props.handleEditUserModal}>\r\n          Cancel</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default EditUserModal;","import React from 'react';\r\nimport { Table, Button } from 'reactstrap';\r\n\r\nconst UsersTable = (props) => {\r\n  const users = props.state.users.map(user => (\r\n    <tr key={user.id}>\r\n      <td>{user.id}</td>\r\n      <td><img src={user.avatar} alt=\"avatar\" className=\"image\" /></td>\r\n      <td className=\"letter\">{user.first_name.toLowerCase()}</td>\r\n      <td className=\"letter\">{user.last_name.toLowerCase()}</td>\r\n      <td>\r\n        <Button\r\n          color=\"success\"\r\n          size=\"sm\"\r\n          className=\"mr-2\"\r\n          onClick={() => props.handleEditUserModal()}>\r\n          Edit\r\n          </Button>\r\n        <Button\r\n          color=\"danger\"\r\n          size=\"sm\"\r\n          onClick={() => props.deleteUser(user.id)}>\r\n          Delete\r\n         </Button>\r\n      </td>\r\n    </tr>\r\n  ))\r\n\r\n  return (\r\n    <Table>\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Avatar</th>\r\n          <th>First Name</th>\r\n          <th>Last Name</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {users}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default UsersTable;","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nconst Header = () => {\r\n  return (\r\n\r\n    <Row className=\"header text-center bg-warning\">\r\n      <Col className=\"header_col\">Application</Col>\r\n    </Row>\r\n\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { CardFooter } from 'reactstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <CardFooter className=\"text-center\">&#169; 2019 Rafał Labisz</CardFooter>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport AddUserModal from './AddUserModal';\nimport EditUserModal from './EditUserModal';\nimport UsersTable from './UsersTable';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Avatar from '../images/image.jpg';\n\nconst API = 'https://reqres.in';\n\nclass App extends Component {\n\n  state = {\n    users: [],\n    err: false,\n    isLoading: false,\n    addUserModal: false,\n    editUserModal: false,\n    value_id: \"\",\n    value_firstName: \"\",\n    value_lastName: \"\"\n  }\n\n  fetchUsers = async (path, option, id) => {\n    await fetch(API + path, option, id)\n      .then(response => {\n        if (response.status === 204) return alert(`User of the number id ${id} has been deleted!`)\n        if (response.ok && response.status !== 204) return response.json()\n      })\n      .then(json => {\n        console.log(option.method, json);\n        const { users, addUserModal } = this.state\n        if (option.method === \"GET\") {\n          this.setState({\n            users: json.data,\n            isLoading: true,\n            err: false,\n          })\n        }\n        else if (option.method === \"POST\") {\n          const newUser = {\n            id: Number(json.id),\n            first_name: json.value_firstName,\n            last_name: json.value_lastName,\n            avatar: Avatar\n          }\n          this.setState({\n            users: [...users, newUser],\n            addUserModal: !addUserModal,\n            isLoading: true,\n            value_firstName: \"\",\n            value_lastName: \"\"\n\n          })\n        }\n        else if (option.method === \"DELETE\") {\n          const users = [...this.state.users];\n          const index = users.findIndex(user => user.id === id)\n          users.splice(index, 1)\n          this.setState({\n            users\n          })\n        }\n        else if (option.method === \"PATCH\") {\n          const users = [...this.state.users];\n          console.log(\"OK\", json)\n          const index = users.findIndex(user => user.id === Number(json.value_id))\n          console.log(index)\n          if (index !== -1) {\n            users[index].first_name = json.value_firstName;\n            users[index].last_name = json.value_lastName;\n            this.setState({\n              users,\n              editUserModal: !this.state.editUserModal,\n              value_firstName: \"\",\n              value_lastName: \"\",\n              value_id: \"\"\n            })\n          }\n          else {\n            alert(\"Id was not found!\")\n            this.setState({ value_id: \"\" })\n          }\n        }\n      })\n      .catch(error => {\n        console.error(error)\n        this.setState({\n          err: true\n        })\n      })\n  }\n\n  addUser = () => {\n    const { value_firstName, value_lastName } = this.state;\n    if (!value_firstName || !value_lastName) return alert('Complete the data!')\n    else {\n      const path = '/api/users';\n      const request = {\n        method: 'POST',\n        headers: { 'Content-type': 'application/json' },\n        body: JSON.stringify({\n          value_firstName,\n          value_lastName\n        })\n      }\n      this.fetchUsers(path, request)\n    }\n  }\n\n  editUser = () => {\n    const { value_firstName, value_lastName, value_id } = this.state;\n    if (!value_firstName || !value_lastName || !value_id) return alert('Complete the data!')\n    else {\n      const path = `/api/users/${value_id}`;\n      const request = {\n        method: 'PATCH',\n        headers: { 'Content-type': 'application/json' },\n        body: JSON.stringify({\n          value_firstName,\n          value_lastName,\n          value_id\n        })\n      }\n      this.fetchUsers(path, request)\n    }\n  }\n\n  deleteUser = (id) => {\n    const path = `/api/users/${id}`\n    const request = {\n      method: 'DELETE',\n      headers: { 'Content-type': 'application/json' },\n      body: JSON.stringify({\n        id\n      })\n    }\n    this.fetchUsers(path, request, id)\n  }\n\n  handleAddUserModal = () => {\n    this.setState(prevState => ({\n      addUserModal: !prevState.addUserModal,\n      value_firstName: \"\",\n      value_lastName: \"\"\n    }))\n  }\n\n  handleEditUserModal = () => {\n    this.setState(prevState => ({\n      editUserModal: !prevState.editUserModal,\n      value_firstName: \"\",\n      value_lastName: \"\",\n      value_id: \"\"\n    }))\n  }\n\n  handleInput = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  componentDidMount() {\n    this.fetchUsers(\"/api/users?per_page=5\", {\n      method: 'GET'\n    })\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"container\">\n          <Button\n            color=\"primary\"\n            onClick={this.handleAddUserModal}>\n            Add User</Button>\n\n          <main>\n            <section className=\"panel\">\n              <AddUserModal\n                state={this.state}\n                handleAddUserModal={this.handleAddUserModal}\n                handleInput={this.handleInput}\n                addUser={this.addUser}\n              />\n              <UsersTable\n                state={this.state}\n                deleteUser={this.deleteUser}\n                handleEditUserModal={this.handleEditUserModal}\n              />\n\n              <EditUserModal\n                state={this.state}\n                handleEditUserModal={this.handleEditUserModal}\n                handleInput={this.handleInput}\n                editUser={this.editUser}\n              />\n\n            </section>\n          </main>\n        </div>\n        <footer>\n          <Footer />\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles/index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}